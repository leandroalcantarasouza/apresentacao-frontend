apiVersion: v1
kind: ConfigMap
metadata:
  labels:
    app: apresentacao-frontend-nginx
  name: config-map-apresentacao-frontend-nginx
  namespace: apresentacao
data:
  BACKEND_URI: service-apresentacao-backend
  BACKEND_PORT: "8080"
  NGINX_PORT: "8081"

---

apiVersion: v1
data:
  default.conf.template: |
    server {
        listen       ${NGINX_PORT};
        server_name  localhost;

        #charset koi8-r;
        #access_log  /var/log/nginx/host.access.log  main;

        location / {
            root   /usr/share/nginx/html;
            index  index.html index.htm;
        }

        #error_page  404              /404.html;

        # redirect server error pages to the static page /50x.html
        #
        error_page   500 502 503 504  /50x.html;
        location = /50x.html {
            root   /usr/share/nginx/html;
        }

        location /api {
            proxy_pass  http://${BACKEND_URI}:${BACKEND_PORT};
        }
    }
kind: ConfigMap
metadata:
  name: config-map-apresentacao-nginx-default-conf
  labels:
    app: apresentacao-frontend-nginx


---

kind: Service
apiVersion: v1
metadata:
  labels:
    app: apresentacao-frontend-nginx
  name: service-apresentacao-frontend-nginx
spec:
  selector:
    app: apresentacao-frontend-nginx
  type: ClusterIP
  ports:
    - name: http
      protocol: TCP
      port: 8081
      targetPort: 8081

---

apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  labels:
    app: apresentacao-frontend-nginx
  name: ingress-apresentacao-frontend-nginx
  annotations:
    kubernetes.io/ingress.class: "nginx"
    nginx.ingress.kubernetes.io/rewrite-target: /
spec:
  rules:
    #- host: apresentacao-frontend.node #verificar host com cloud provider
    -  http:
         paths:
           - path: /
             backend:
               serviceName: service-apresentacao-frontend-nginx
               servicePort: 8081

---

apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: apresentacao-frontend-nginx
  name: deployment-apresentacao-frontend-nginx
  namespace: apresentacao
spec:
  replicas: 1
  selector:
    matchLabels:
      app: apresentacao-frontend-nginx
  template:
    metadata:
      labels:
        app: apresentacao-frontend-nginx
    spec:
      containers:
        - name: apresentacao-frontend-nginx
          image: apresentacao-frontend:nginx
          imagePullPolicy: Never
          envFrom: #puxa todas as configuracoes a partir do config map (as chaves e valores vem do arquivo)
            - configMapRef:
                name: config-map-apresentacao-frontend-nginx
          volumeMounts:
            - name: default-conf-template
              mountPath: /etc/nginx/temp/
              readOnly: true
          ports:
            - containerPort: 8081
          #command:
          command: ["/bin/bash"]
          args: [ "-c", "envsubst < /etc/nginx/temp/default.conf.template > /etc/nginx/conf.d/default.conf && exec nginx -g 'daemon off;'"]
      volumes:
        - name: default-conf-template
          configMap:
            name: config-map-apresentacao-nginx-default-conf
